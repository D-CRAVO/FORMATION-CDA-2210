Créer un projet 
->API web ASP.NET Core
->Legumos

Ajouter (dans Projet Legumos)
-> NouveauDossier ->Db
-> NouveauDossier ->Models

Ajouter (dans Models)
-> Classe ->Vegetable

Dans vegetable créer les accesseurs (avec majuscule)
(les attributs sont créés par Visual Studio en arrière-plan)
-> [Key] public int VegetableId {get;set;} 
-> rajouter [Key] devant pour préciser que c'est une clé primaire
-> rajouter le using System.ComponentModel.DataAnnotations;
-> [Required] public string Name {get; set;} 
-> rajouter [Required] devant pour rendre le champs obligatoire
-> rajouter [Column ("vegetable_name")] pour renomer la colonne dans la base de données
-> rajouter si cela ne se fait pas automatiquement using System.ComponentModel.DataAnnotations.Schema;
-> ...

Il y a la possibilité de renomer également la table pour la base de données
-> rajouter [Table ("tbl_vegetables")]

Ajouter (dans Db)
-> Classe ->VegetableDbContext

Ajouter l'héritage 
-> public class VegetablesDbContext : DbContext
-> using Microsoft.EntityFrameworkCore;

Outils 
Gestionnaire de package NuGet
->MicrosoftEntityFrameworkCore
->MicrosoftEntityFrameworkCore.Design
->MicrosoftEntityFrameworkCore.SqlServer
->MicrosoftEntityFrameworkCore.Tools

Ajouter chaine de connection
 ->     protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            base.OnConfiguring(optionsBuilder);
            optionsBuilder.UseSqlServer((@"Server=(localdb)\mssqllocaldb;Database=db_legumos");
        }

Ajouter DbSet
-> public DbSet<Vegetable> Vegetables { get; set; }

Si cela ne se fait pas automatiquement :
-> using Microsoft.EntityFrameworkCore;
-> ajouter using Movies.Models;

Dans la console du gestionnaire de packages on fait la migration
-> add-migration vegetables-v1
Cela ouvre alors le détail de la migration 
-> attention à ne pas faire de modifications dans cette page
(remove-migration)
-> update-database

A partir de là la base de données est créée et peut être consultée